{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 --Analyze Phase\
\
select * from cyclistic.cycledata_2021_process limit 10\
\
-- 1. Numbers of riders in Casual, Electric or Docked\
\
select \
	member_casual, count(*) from cyclistic.cycledata_2021_process\
group by \
	member_casual\
\
--1. Numbers of riders in Casual & Members who prefer Casual or Electric or Docked\
\
select \
	member_casual, rideable_type, count(*) from cyclistic.cycledata_2021_process\
--where rideable_type = 'classic_bike' or rideable_type = 'electric_bike'\
group by \
	member_casual, rideable_type\
order by \
	count(*) desc\
\
--2. What do Casual and members prefer? Electric, Docked or the classic?\
select \
	member_casual, rideable_type, count(*) as Amount\
from \
	cyclistic.cycledata_2021_process\
group by \
	member_casual, rideable_type\
order by \
	Amount desc\
\
\
--3. Average Ride duration per day\
select member_casual, --rideable_type, \
case\
	when (ended_at - started_at) between interval '0 hours' and interval '2 hours' then '0 to 2 hours'\
	when (ended_at - started_at) between interval '2 hours' and interval '6 hours' then '2 to 6 hours'\
	else '8 or more hours'\
	end as Ride_duration, count(*)\
from \
	cyclistic.cycledata_2021_process\
group by \
	member_casual, Ride_duration --rideable_type\
order by \
	Ride_duration --,rideable_type\
\
\
--4. Most Popular period of the hour (day), week & season (month) \
\
--4.1 Seasons\
select count(*) as no_of_users, --rideable_type,\
case\
	when extract(month from started_at) between 3 and 5 then 'Spring'\
	when extract(month from started_at) between 6 and 8 then 'Summer'\
	when extract(month from started_at) between 9 and 11 then 'Autumn'\
	when extract(month from started_at) in (12, 1, 2) then 'Winter'\
	end as season\
from \
	cyclistic.cycledata_2021_process\
--where\
--	rideable_type != 'docked_bike'\
group by\
	season--,time_of_day --rideable_type\
order by\
	no_of_users desc, season\
	\
\
-- Month \
	\
SELECT \
    count(*) AS no_of_users, to_char(started_at, 'Month') as month_of_the_year\
from \
    cyclistic.cycledata_2021_process\
group by\
    month_of_the_year--, time_of_day\
order by \
	no_of_users desc\
\
\
--Day\
\
select \
    count(*) as no_of_users,\
    TO_CHAR(started_at, 'Day') AS day_name\
from \
    cyclistic.cycledata_2021_process\
group by\
    day_name\
order by\
    no_of_users desc, day_name\
\
\
-- Hours	\
\
select count(*) as no_of_users, --rideable_type,\
case\
    when extract(HOUR FROM started_at) BETWEEN 6 AND 12 THEN 'Morning (6-12)AM'\
    when extract(HOUR FROM started_at) BETWEEN 13 AND 15 THEN 'Afternoon (13-15)AM'\
    when extract(HOUR FROM started_at) BETWEEN 15 AND 18 THEN 'Evening (15-18)AM'\
    when extract(HOUR FROM started_at) BETWEEN 18 AND 20 THEN 'Night (16-20)PM'\
    else 'Other'\
    end as time_of_day\
from \
	cyclistic.cycledata_2021_process\
group by\
	time_of_day --rideable_type\
order by\
	no_of_users desc, time_of_day\
	\
\
--5. Top 10 most used station\
select \
	count(*) as no_of_users, start_station_name\
from \
	cyclistic.cycledata_2021_process\
group by\
	start_station_name\
order by\
	no_of_users desc\
limit 10\
\
--6. Top 10 most commuted station\
select\
	count(*) as no_of_users, start_station_name, end_station_name\
from \
	cyclistic.cycledata_2021_process\
group by\
	start_station_name, end_station_name\
order by\
	no_of_users desc\
limit 10\
\
\
\
\
}